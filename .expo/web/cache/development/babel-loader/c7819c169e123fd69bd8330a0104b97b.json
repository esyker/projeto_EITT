{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Hammer from 'hammerjs';\nimport State from \"../State\";\nimport PressGestureHandler from \"./PressGestureHandler\";\nimport { isnan } from \"./utils\";\n\nvar LongPressGestureHandler = function (_PressGestureHandler) {\n  _inherits(LongPressGestureHandler, _PressGestureHandler);\n\n  var _super = _createSuper(LongPressGestureHandler);\n\n  function LongPressGestureHandler() {\n    _classCallCheck(this, LongPressGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LongPressGestureHandler, [{\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var maxDistSq = _ref.maxDistSq;\n      return !isnan(maxDistSq);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this._hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread({}, _get(_getPrototypeOf(LongPressGestureHandler.prototype), \"getHammerConfig\", this).call(this), {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n\n      return (_Hammer$INPUT_START$H = {}, _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_START, State.ACTIVE), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_MOVE, State.ACTIVE), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_END, State.END), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_CANCEL, State.FAILED), _Hammer$INPUT_START$H)[type];\n    }\n  }, {\n    key: \"minDurationMs\",\n    get: function get() {\n      return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }]);\n\n  return LongPressGestureHandler;\n}(PressGestureHandler);\n\nexport default LongPressGestureHandler;","map":{"version":3,"sources":["C:/Users/diogo/OneDrive/Área de Trabalho/react-native/SuperMarket/node_modules/react-native-gesture-handler/web/LongPressGestureHandler.js"],"names":["Hammer","State","PressGestureHandler","isnan","LongPressGestureHandler","maxDistSq","_hasCustomActivationCriteria","shouldCancelWhenOutside","config","time","minDurationMs","type","INPUT_START","ACTIVE","INPUT_MOVE","INPUT_END","END","INPUT_CANCEL","FAILED","maxDist"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AAEA,OAAOC,KAAP;AACA,OAAOC,mBAAP;AACA,SAASC,KAAT;;IAEMC,uB;;;;;;;;;;;;;4DAS6C;AAAA,UAAbC,SAAa,QAAbA,SAAa;AAC/C,aAAO,CAACF,KAAK,CAACE,SAAD,CAAb;AACD;;;gCAEW;AACV,UAAI,CAAC,KAAKC,4BAAV,EAAwC;AAGtC,eAAO;AACLC,UAAAA,uBAAuB,EAAE,IADpB;AAELF,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID;;AACD,aAAO,KAAKG,MAAZ;AACD;;;sCAEiB;AAChB;AAGEC,QAAAA,IAAI,EAAE,KAAKC;AAHb;AAKD;;;6BAEQC,I,EAAM;AAAA;;AACb,aAAO,oEACJX,MAAM,CAACY,WADH,EACiBX,KAAK,CAACY,MADvB,0CAEJb,MAAM,CAACc,UAFH,EAEgBb,KAAK,CAACY,MAFtB,0CAGJb,MAAM,CAACe,SAHH,EAGed,KAAK,CAACe,GAHrB,0CAIJhB,MAAM,CAACiB,YAJH,EAIkBhB,KAAK,CAACiB,MAJxB,0BAKLP,IALK,CAAP;AAMD;;;wBAvCmB;AAClB,aAAOR,KAAK,CAAC,KAAKK,MAAL,CAAYE,aAAb,CAAL,GAAmC,GAAnC,GAAyC,KAAKF,MAAL,CAAYE,aAA5D;AACD;;;wBAEa;AACZ,aAAOP,KAAK,CAAC,KAAKK,MAAL,CAAYW,OAAb,CAAL,GAA6B,CAA7B,GAAiC,KAAKX,MAAL,CAAYW,OAApD;AACD;;;;EAPmCjB,mB;;AA2CtC,eAAeE,uBAAf","sourcesContent":["import Hammer from 'hammerjs';\n\nimport State from '../State';\nimport PressGestureHandler from './PressGestureHandler';\nimport { isnan } from './utils';\n\nclass LongPressGestureHandler extends PressGestureHandler {\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  updateHasCustomActivationCriteria({ maxDistSq }) {\n    return !isnan(maxDistSq);\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.ACTIVE,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.FAILED,\n    }[type];\n  }\n}\n\nexport default LongPressGestureHandler;\n"]},"metadata":{},"sourceType":"module"}